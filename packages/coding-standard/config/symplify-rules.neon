includes:
    - ../packages/cognitive-complexity/config/cognitive-complexity-rules.neon
    - symplify-rules/array-rules.neon
    - symplify-rules/code-complexity-rules.neon
    - symplify-rules/static-rules.neon
    - symplify-rules/doctrine-rules.neon
    - symplify-rules/naming-rules.neon
    - symplify-rules/regex-rules.neon
    - symplify-rules/symfony-rules.neon
    - symplify-rules/test-rules.neon

parameters:
    symplify:
        max_method_cognitive_complexity: 8
        max_class_cognitive_complexity: 50

services:
    -
        class: Symplify\CodingStandard\Rules\NoFactoryInConstructorRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\PreventParentMethodVisibilityOverrideRule
        tags: [phpstan.rules.rule]

    # paths
    -
        class: Symplify\CodingStandard\Rules\NoMissingDirPathRule
        tags: [phpstan.rules.rule]

    # service architeture
    -
        class: Symplify\CodingStandard\Rules\NoNewOutsideFactoryRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoProtectedElementInFinalClassRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoScalarAndArrayConstructorParameterRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoAbstractMethodRule
        tags: [phpstan.rules.rule]

    # parenting
    -
        class: Symplify\CodingStandard\Rules\ForbiddenParentClassRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenParentClasses:
                - Doctrine\ORM\EntityRepository

            forbiddenParentClassesWithPreferences:
                PHPStan\Testing\RuleTestCase: 'Symplify\PHPStanExtensions\Testing\AbstractServiceAwareRuleTestCase'

    -
        class: Symplify\CodingStandard\Rules\PreferredClassRule
        tags: [phpstan.rules.rule]
        arguments:
            oldToPrefferedClasses:
                SplFileInfo: 'Symplify\SmartFileSystem\SmartFileInfo'
                DateTime: 'Nette\Utils\DateTime'
                'PhpCsFixer\Finder': 'Symfony\Component\Finder\Finder'
                # smart file system
                'Symfony\Component\Finder\SplFileInfo': 'Symplify\SmartFileSystem\SmartFileInfo'
                'Nette\Utils\FileSystem': 'Symplify\SmartFileSystem\SmartFileSystem'
                'Symfony\Component\Filesystem\Filesystem': 'Symplify\SmartFileSystem\SmartFileSystem'

    -
        class: Symplify\CodingStandard\Rules\NoReferenceRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoArrayAccessOnObjectRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoClassWithStaticMethodWithoutStaticNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoDuplicatedShortClassNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbiddenFuncCallRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenFunctions: ['d', 'dd', 'dump', 'var_dump', 'extract']

    -
        class: Symplify\CodingStandard\Rules\ClassNameRespectsParentSuffixRule
        tags: [phpstan.rules.rule]
        arguments:
            parentClasses: []

    -
        class: Symplify\CodingStandard\Rules\BoolishClassMethodPrefixRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\ForbidReturnValueOfIncludeOnceRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\SeeAnnotationToTestRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredSeeTypes:
                - PHPStan\Rules\Rule
                - PHP_CodeSniffer\Sniffs\Sniff
                - PHP_CodeSniffer\Fixer

    # dead-code
    -
        class: Symplify\CodingStandard\Rules\NoParentMethodCallOnEmptyStatementInParentMethodRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoDynamicMethodNameRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoIssetOnObjectRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoEmptyRule
        tags: [phpstan.rules.rule]

    # explicit naming
    -
        class: Symplify\CodingStandard\Rules\NoDefaultExceptionRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\MatchingTypeConstantRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\RequireStringArgumentInMethodCallRule
        tags: [phpstan.rules.rule]
        arguments:
            stringArgByMethodByType: []

    -
        class: Symplify\CodingStandard\Rules\ExcessiveParameterListRule
        tags: [phpstan.rules.rule]
        arguments:
            maxParameterCount: 8

    -
        class: Symplify\CodingStandard\Rules\PrefferedStaticCallOverFuncCallRule
        tags: [phpstan.rules.rule]
        arguments:
            funcCallToPrefferedStaticCalls:
                'preg_match': ['Nette\Utils\Strings', 'match']
                'preg_match_all': ['Nette\Utils\Strings', 'matchAll']
                'preg_replace': ['Nette\Utils\Strings', 'replace']
                'preg_replace_callback': ['Nette\Utils\Strings', 'replace']
                'preg_split': ['Nette\Utils\Strings', 'split']
                'file_get_contents': ['Symplify\SmartFileSystem\SmartFileSystem', 'readFile']
                'file_put_contents': ['Symplify\SmartFileSystem\SmartFileSystem', 'dumpFile']
                'strstr': ['Nette\Utils\Strings', 'contains']

    -
        class: Symplify\CodingStandard\Rules\ExcessivePublicCountRule
        tags: [phpstan.rules.rule]
        arguments:
            maxPublicClassElementCount: 10

    -
        class: Symplify\CodingStandard\Rules\TooLongVariableRule
        tags: [phpstan.rules.rule]
        arguments:
            maxVariableLength: 40

    -
        class: Symplify\CodingStandard\Rules\NoSetterOnServiceRule
        tags: [phpstan.rules.rule]

    -
        class: Symplify\CodingStandard\Rules\NoParentMethodCallOnNoOverrideProcessRule
        tags: [phpstan.rules.rule]

#    -
#        class: 'PhpParser\ParserFactory'
#    -
#        class: PhpParser\Parser
#        factory: ['@PhpParser\ParserFactory', 'create']

# broken now
#    -
#        class: Symplify\CodingStandard\Rules\CheckUnneededSymfonyStyleUsageRule
#        tags: [phpstan.rules.rule]

    # services
    - Symplify\CodingStandard\PhpParser\NodeNameResolver
    - Symplify\CodingStandard\PHPStan\ParentMethodAnalyser
    - Symplify\CodingStandard\PHPStan\Types\ScalarTypeAnalyser
    - Symplify\CodingStandard\PHPStan\VariableAsParamAnalyser
    - Symplify\PackageBuilder\Matcher\ArrayStringAndFnMatcher
    - Symplify\PackageBuilder\Reflection\PrivatesAccessor
    - PhpParser\NodeFinder
    - Symplify\SmartFileSystem\SmartFileSystem
    - Symplify\CodingStandard\PHPStan\NodeResolver\ParentClassMethodNodeResolver
    - Symplify\CodingStandard\PHPStan\Types\ContainsTypeAnalyser
